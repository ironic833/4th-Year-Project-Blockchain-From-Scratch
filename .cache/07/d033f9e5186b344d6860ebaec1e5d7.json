{"id":"../../node_modules/@restart/hooks/esm/usePrevious.js","dependencies":[{"name":"D:\\Github\\Blockchain-On-Udemy\\ElectronCryptochain\\package.json","includedInParent":true,"mtime":1681651677721},{"name":"D:\\Github\\Blockchain-On-Udemy\\ElectronCryptochain\\node_modules\\@restart\\hooks\\package.json","includedInParent":true,"mtime":1681651669849},{"name":"react","loc":{"line":1,"column":34,"index":34},"parent":"D:\\Github\\Blockchain-On-Udemy\\ElectronCryptochain\\node_modules\\@restart\\hooks\\esm\\usePrevious.js","resolved":"D:\\Github\\Blockchain-On-Udemy\\ElectronCryptochain\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = usePrevious;\nvar _react = require(\"react\");\n/**\r\n * Store the last of some value. Tracked via a `Ref` only updating it\r\n * after the component renders.\r\n *\r\n * Helpful if you need to compare a prop value to it's previous value during render.\r\n *\r\n * ```ts\r\n * function Component(props) {\r\n *   const lastProps = usePrevious(props)\r\n *\r\n *   if (lastProps.foo !== props.foo)\r\n *     resetValueFromProps(props.foo)\r\n * }\r\n * ```\r\n *\r\n * @param value the value to track\r\n */\n\nfunction usePrevious(value) {\n  var ref = (0, _react.useRef)(null);\n  (0, _react.useEffect)(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":15}},{"generated":{"line":26,"column":9},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":24},"name":"usePrevious"},{"generated":{"line":26,"column":20},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":35}},{"generated":{"line":26,"column":21},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":36},"name":"value"},{"generated":{"line":26,"column":26},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":41}},{"generated":{"line":26,"column":28},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":43}},{"generated":{"line":27,"column":2},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":2}},{"generated":{"line":27,"column":6},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":6},"name":"ref"},{"generated":{"line":27,"column":9},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":9}},{"generated":{"line":27,"column":12},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":12}},{"generated":{"line":27,"column":16},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":12},"name":"useRef"},{"generated":{"line":27,"column":29},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":18}},{"generated":{"line":27,"column":31},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":19}},{"generated":{"line":27,"column":35},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":23}},{"generated":{"line":27,"column":36},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":24}},{"generated":{"line":28,"column":2},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":22,"column":2}},{"generated":{"line":28,"column":6},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":22,"column":2},"name":"useEffect"},{"generated":{"line":28,"column":22},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":22,"column":11}},{"generated":{"line":28,"column":24},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":22,"column":12}},{"generated":{"line":28,"column":36},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":22,"column":24}},{"generated":{"line":29,"column":4},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":4},"name":"ref"},{"generated":{"line":29,"column":7},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":7}},{"generated":{"line":29,"column":8},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":8},"name":"current"},{"generated":{"line":29,"column":15},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":15}},{"generated":{"line":29,"column":18},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":18},"name":"value"},{"generated":{"line":29,"column":23},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":23}},{"generated":{"line":30,"column":2},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":24,"column":2}},{"generated":{"line":30,"column":3},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":24,"column":3}},{"generated":{"line":30,"column":4},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":24,"column":4}},{"generated":{"line":31,"column":2},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":2}},{"generated":{"line":31,"column":9},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":9},"name":"ref"},{"generated":{"line":31,"column":12},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":12}},{"generated":{"line":31,"column":13},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":13},"name":"current"},{"generated":{"line":31,"column":20},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":20}},{"generated":{"line":32,"column":0},"source":"../../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":26,"column":0}}],"sources":{"../../node_modules/@restart/hooks/esm/usePrevious.js":"import { useEffect, useRef } from 'react';\r\n/**\r\n * Store the last of some value. Tracked via a `Ref` only updating it\r\n * after the component renders.\r\n *\r\n * Helpful if you need to compare a prop value to it's previous value during render.\r\n *\r\n * ```ts\r\n * function Component(props) {\r\n *   const lastProps = usePrevious(props)\r\n *\r\n *   if (lastProps.foo !== props.foo)\r\n *     resetValueFromProps(props.foo)\r\n * }\r\n * ```\r\n *\r\n * @param value the value to track\r\n */\r\n\r\nexport default function usePrevious(value) {\r\n  var ref = useRef(null);\r\n  useEffect(function () {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}"},"lineCount":null}},"error":null,"hash":"41586f8048aa0201e12ca9b1640b8e02","cacheData":{"env":{}}}