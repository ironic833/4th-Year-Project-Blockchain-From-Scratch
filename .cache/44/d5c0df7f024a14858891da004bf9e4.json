{"id":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","dependencies":[{"name":"D:\\Github\\Blockchain-On-Udemy\\cryptochain\\package.json","includedInParent":true,"mtime":1680256974949},{"name":"D:\\Github\\Blockchain-On-Udemy\\cryptochain\\node_modules\\react-overlays\\package.json","includedInParent":true,"mtime":1680197956068}],"generated":{"js":"'use strict';\r\n\r\nexports.__esModule = true;\r\nexports.default = addFocusListener;\r\n/**\r\n * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling\r\n * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8\r\n *\r\n * We only allow one Listener at a time to avoid stack overflows\r\n */\r\nfunction addFocusListener(handler) {\r\n  var useFocusin = !document.addEventListener;\r\n  var remove = void 0;\r\n\r\n  if (useFocusin) {\r\n    document.attachEvent('onfocusin', handler);\r\n    remove = function remove() {\r\n      return document.detachEvent('onfocusin', handler);\r\n    };\r\n  } else {\r\n    document.addEventListener('focus', handler, true);\r\n    remove = function remove() {\r\n      return document.removeEventListener('focus', handler, true);\r\n    };\r\n  }\r\n\r\n  return { remove: remove };\r\n}\r\nmodule.exports = exports['default'];"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../../node_modules/react-overlays/lib/utils/addFocusListener.js":"'use strict';\r\n\r\nexports.__esModule = true;\r\nexports.default = addFocusListener;\r\n/**\r\n * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling\r\n * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8\r\n *\r\n * We only allow one Listener at a time to avoid stack overflows\r\n */\r\nfunction addFocusListener(handler) {\r\n  var useFocusin = !document.addEventListener;\r\n  var remove = void 0;\r\n\r\n  if (useFocusin) {\r\n    document.attachEvent('onfocusin', handler);\r\n    remove = function remove() {\r\n      return document.detachEvent('onfocusin', handler);\r\n    };\r\n  } else {\r\n    document.addEventListener('focus', handler, true);\r\n    remove = function remove() {\r\n      return document.removeEventListener('focus', handler, true);\r\n    };\r\n  }\r\n\r\n  return { remove: remove };\r\n}\r\nmodule.exports = exports['default'];"},"lineCount":29}},"error":null,"hash":"2d86c1b445e79e3d5af3a022a6583211","cacheData":{"env":{}}}